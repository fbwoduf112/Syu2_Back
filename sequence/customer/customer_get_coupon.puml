@startuml
'https://plantuml.com/sequence-diagram

title 고객 쿠폰 조회 및 발급 시퀀스 다이어그램

autonumber "<b>[0]"

actor "고객" as CustomerClient
participant "CustomerCouponController" as Controller
participant "CustomerCouponService" as Service
database "데이터베이스" as DB

== 1. 특정 가게의 발급 가능한 쿠폰 목록 조회 ==

CustomerClient -> Controller: GET /api/customer/stores/{storeId}/coupons
activate Controller
note right of Controller: getAvailableCoupons(storeId)

Controller -> Service: getAvailableCoupons(storeId)
activate Service
note right of Service: getAvailableCoupons(storeId)

Service -> DB: storeId로 Store 조회\n(StoreRepository.findById)
DB --> Service: Store 정보

Service -> DB: 발급 가능한 쿠폰 목록 조회\n(CouponRepository.findAvailableCouponsByStore)
DB --> Service: List<Coupon>

note right of Service: Coupon Entity를 CouponDto로 변환
Service --> Controller: List<CouponDto>
deactivate Service

Controller --> CustomerClient: 200 OK (쿠폰 목록)
deactivate Controller

== 2. 발급 가능한 모든 쿠폰 목록 조회 ==

CustomerClient -> Controller: GET /api/customer/coupons/available
activate Controller
note right of Controller: getAllAvailableCoupons()

Controller -> Service: getAllAvailableCoupons()
activate Service
note right of Service: getAllAvailableCoupons()

Service -> DB: 발급 가능한 모든 쿠폰 목록 조회\n(CouponRepository.findAllAvailableCoupons)
DB --> Service: List<Coupon>

note right of Service: Coupon Entity를 CouponDto로 변환
Service --> Controller: List<CouponDto>
deactivate Service

Controller -> CustomerClient: 200 OK (쿠폰 목록)
deactivate Controller

== 3. 쿠폰 발급받기 (로그인 필요) ==

CustomerClient -> Controller: POST /api/customer/coupons/{couponId}/issue\n(Authorization: Bearer {JWT})
activate Controller
note right of Controller: issueCoupon(couponId, user)

Controller -> Service: issueCoupon(customerId, couponId)
activate Service
note right of Service: issueCoupon(customerId, couponId)

Service -> DB: 고객 정보 조회 (CustomerRepository.findById)
DB --> Service: Customer 정보

Service -> DB: 쿠폰 정보 조회 (Pessimistic Lock)\n(CouponRepository.findByIdWithPessimisticLock)
DB --> Service: Coupon 정보

group 쿠폰 발급 유효성 검증
    Service -> Service: 쿠폰 상태, 수량, 발급 기간 확인
    Service -> DB: 고객의 쿠폰 발급 이력 확인\n(CustomerCouponRepository.findByCustomerIdAndCouponId)
    DB --> Service: 발급 이력 없음
end

Service -> DB: 쿠폰 발급 수량 증가 (coupon.issue())
Service -> DB: 고객 쿠폰 생성 및 저장 (CustomerCouponRepository.save)
note right of Service
  만료일(expiresAt) 계산:
  - ABSOLUTE: 쿠폰의 expiryDate 사용
  - RELATIVE: 현재시간 + expiryDays
end note

DB --> Service: 저장 완료
Service --> Controller: void (성공)
deactivate Service

Controller --> CustomerClient: 200 OK ("쿠폰이 성공적으로 발급되었습니다.")
deactivate Controller

@enduml