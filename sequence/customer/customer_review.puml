@startuml
'https://plantuml.com/sequence-diagram

title 고객 리뷰 작성 시퀀스 다이어그램

autonumber "<b>[0]"

actor "고객" as CustomerClient
participant "ReviewController" as Controller
participant "ReviewService" as Service
participant "Amazon S3" as S3
database "데이터베이스" as DB

== 1. 미작성 리뷰 목록 조회 ==

CustomerClient -> Controller: GET /review/ListShow
activate Controller
note right of Controller: ReviewController.reviewList()

Controller -> Service: getUnreviewedStatisticsByCustomer(customer)
activate Service
note right of Service: ReviewService.getUnreviewedStatisticsByCustomer()

Service -> DB: findByCustomerAndReviewedFalse(customer)
DB --> Service: List<CustomerStatistics>

Service --> Controller: List<UnreviewedStatisticsDto>
deactivate Service

Controller --> CustomerClient: ResponseEntity.ok(reviewList)
deactivate Controller

== 2. 리뷰 작성 ==

CustomerClient -> Controller: POST /review/write\n(ReviewWriteDTO, 이미지 파일)
activate Controller
note right of Controller: ReviewController.writeReview()

Controller -> Service: saveReview(customer, reviewWriteDTO)
activate Service
note right of Service: ReviewService.saveReview()

Service -> DB: findById(statisticsId)
DB --> Service: CustomerStatistics (Store 포함)

Service -> DB: findByMenuName(orderDetails)
DB --> Service: StoreMenu

alt 이미지 파일이 있는 경우
    Service -> S3: uploadFile(images)
    activate S3
    S3 --> Service: imageUrl
    deactivate S3
else 이미지가 없는 경우
    Service -> Service: imageUrl = "NULL"
end

Service -> DB: CustomerReviewCollect 저장 (save)
Service -> DB: CustomerStatistics.reviewed = true 업데이트
note right of DB: @Transactional에 의해 커밋 시점에 반영

Service --> Controller: void
deactivate Service

Controller --> CustomerClient: ResponseEntity.ok()
deactivate Controller

@enduml